{
  "swagger": "2.0",
  "info": {
    "title": "grpc-micro-safety API",
    "version": "0.0.1"
  },
  "host": "localhost:5000",
  "basePath":	"/",
  "tags": [
    {
      "name": "AttendanceService"
    },
    {
      "name": "AuthService"
    },
    {
      "name": "CertificateService"
    },
    {
      "name": "CheckService"
    },
    {
      "name": "ImageService"
    },
    {
      "name": "MethodService"
    },
    {
      "name": "OfficeService"
    },
    {
      "name": "PolicyService"
    },
    {
      "name": "RoleService"
    },
    {
      "name": "ScheduleService"
    },
    {
      "name": "ServiceService"
    },
    {
      "name": "UserService"
    },
    {
      "name": "WorkspaceService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/attendances": {
      "get": {
        "summary": "Find Attendances",
        "description": "Use this API to find attendances",
        "operationId": "AttendanceService_FindAttendances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindAttendancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "scheduleId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "adminUsername",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "AttendanceService"
        ]
      },
      "post": {
        "summary": "Create a new attendance",
        "description": "Use this API to create a new attendance",
        "operationId": "AttendanceService_CreateAttendance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateAttendanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateAttendanceRequest"
            }
          }
        ],
        "tags": [
          "AttendanceService"
        ]
      }
    },
    "/attendances/{id}": {
      "get": {
        "summary": "Find Attendance By Id",
        "description": "Use this API to find attendance by id",
        "operationId": "AttendanceService_FindAttendanceById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindAttendanceByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "AttendanceService"
        ]
      },
      "delete": {
        "summary": "Delete attendance by id",
        "description": "Use this API to delete attendance by id",
        "operationId": "AttendanceService_DeleteAttendanceById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteAttendanceByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "AttendanceService"
        ]
      },
      "patch": {
        "summary": "Update attendance by id",
        "description": "Use this API to update attendance by id",
        "operationId": "AttendanceService_UpdateAttendanceById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateAttendanceByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "adminUsername": {
                  "type": "string",
                  "example": "admin"
                },
                "status": {
                  "type": "string",
                  "example": "approved"
                },
                "statusInfo": {
                  "type": "string",
                  "example": "Sip"
                }
              },
              "title": "Update Attendance By ID"
            }
          }
        ],
        "tags": [
          "AttendanceService"
        ]
      }
    },
    "/auth/change-email": {
      "post": {
        "summary": "Change email a user",
        "description": "Use this API to change email a user",
        "operationId": "UserService_ChangeEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbChangeEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbChangeEmailRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Send Reset Password Token",
        "description": "Use this API to send reset password token by user email",
        "operationId": "AuthService_ForgotPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbForgotPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbForgotPasswordRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "description": "Use this API to login user and get access token \u0026 refresh token",
        "operationId": "AuthService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoginRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout",
        "description": "Use this API to logout",
        "operationId": "UserService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLogoutRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/auth/me": {
      "get": {
        "summary": "Get User Data",
        "description": "Use this API to get user data",
        "operationId": "UserService_GetMe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ]
      },
      "patch": {
        "summary": "Update user by his token",
        "description": "Use this API to update user",
        "operationId": "UserService_UpdateMe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateMeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateMeRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Renew Access Token",
        "description": "Use this API to renew access token",
        "operationId": "UserService_RefreshAccessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRefreshAccessTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbRefreshAccessTokenRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Use this API to register a new user",
        "operationId": "AuthService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbRegisterRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/auth/reset-password/{resetToken}": {
      "post": {
        "summary": "Reset Password",
        "description": "Use this API to reset password",
        "operationId": "AuthService_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbResetPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resetToken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "test1234"
                }
              },
              "title": "ResetPassword"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/auth/verify-email/{code}": {
      "get": {
        "summary": "Verify User Email",
        "description": "Use this API to verify user email",
        "operationId": "AuthService_VerifyEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbVerifyEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/certificates": {
      "get": {
        "summary": "Find Certificates",
        "description": "Use this API to find certificates",
        "operationId": "CertificateService_FindCertificates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindCertificatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "CertificateService"
        ]
      },
      "post": {
        "summary": "Create a new certificate",
        "description": "Use this API to create a new certificate",
        "operationId": "CertificateService_CreateCertificate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateCertificateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateCertificateRequest"
            }
          }
        ],
        "tags": [
          "CertificateService"
        ]
      }
    },
    "/certificates/{id}": {
      "get": {
        "summary": "Find Certificate By Id",
        "description": "Use this API to find certificate by id",
        "operationId": "CertificateService_FindCertificateById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindCertificateByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "CertificateService"
        ]
      },
      "delete": {
        "summary": "Delete certificate by id",
        "description": "Use this API to delete certificate by id",
        "operationId": "CertificateService_DeleteCertificateById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteCertificateByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "CertificateService"
        ]
      },
      "patch": {
        "summary": "Update certificate by id",
        "description": "Use this API to update certificate by id",
        "operationId": "CertificateService_UpdateCertificateById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateCertificateByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "example": "Application for a work from office permit"
                },
                "imageUrl": {
                  "type": "string",
                  "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
                },
                "adminUsername": {
                  "type": "string",
                  "example": "admin"
                },
                "status": {
                  "type": "string",
                  "example": "approved"
                },
                "statusInfo": {
                  "type": "string",
                  "example": "Sip"
                }
              },
              "title": "Update Certificate By ID"
            }
          }
        ],
        "tags": [
          "CertificateService"
        ]
      }
    },
    "/check-in/{attendanceId}": {
      "patch": {
        "summary": "Update check in by attendance id",
        "description": "Use this API to update check in by id",
        "operationId": "CheckService_CheckIn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCheckInResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "attendanceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "temperature": {
                  "type": "number",
                  "format": "double",
                  "example": "37.5"
                }
              },
              "title": "Check In By Attendance ID"
            }
          }
        ],
        "tags": [
          "CheckService"
        ]
      }
    },
    "/check-out/{attendanceId}": {
      "patch": {
        "summary": "Update check out by attendance id",
        "description": "Use this API to update check out by id",
        "operationId": "CheckService_CheckOut",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCheckOutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "attendanceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "CheckService"
        ]
      }
    },
    "/checks": {
      "get": {
        "summary": "Find Checks",
        "description": "Use this API to find checks",
        "operationId": "CheckService_FindChecks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindChecksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "scheduleId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "CheckService"
        ]
      }
    },
    "/checks/{attendanceId}": {
      "get": {
        "summary": "Find Check By Id",
        "description": "Use this API to find check by id",
        "operationId": "CheckService_FindCheckById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindCheckByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "attendanceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "CheckService"
        ]
      }
    },
    "/images": {
      "post": {
        "summary": "Upload a new image",
        "description": "Use this API to upload a new image",
        "operationId": "ImageService_UploadImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUploadImageResponse"
            }
          }
        },
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "required": true
          }
        ],
        "tags": [
          "ImageService"
        ]
      }
    },
    "/images/{id}": {
      "get": {
        "summary": "Find Image By Id",
        "description": "Use this API to find image by id",
        "operationId": "ImageService_FindImageById",
        "produces": ["image/*"],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "file"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImageService"
        ]
      }
    },
    "/methods": {
      "get": {
        "summary": "Find Methods",
        "description": "Use this API to find methods",
        "operationId": "MethodService_FindMethods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindMethodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "MethodService"
        ]
      },
      "post": {
        "summary": "Create a new method",
        "description": "Use this API to create a new method",
        "operationId": "MethodService_CreateMethod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateMethodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateMethodRequest"
            }
          }
        ],
        "tags": [
          "MethodService"
        ]
      }
    },
    "/methods/{id}": {
      "delete": {
        "summary": "Delete method by id",
        "description": "Use this API to delete method by id",
        "operationId": "MethodService_DeleteMethodById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteMethodByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "MethodService"
        ]
      }
    },
    "/offices": {
      "get": {
        "summary": "Find Offices",
        "description": "Use this API to find offices",
        "operationId": "OfficeService_FindOffices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindOfficesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "detail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "OfficeService"
        ]
      },
      "post": {
        "summary": "Create a new office",
        "description": "Use this API to create a new office",
        "operationId": "OfficeService_CreateOffice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateOfficeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateOfficeRequest"
            }
          }
        ],
        "tags": [
          "OfficeService"
        ]
      }
    },
    "/offices/{id}": {
      "get": {
        "summary": "Find Office By Id",
        "description": "Use this API to find office by id",
        "operationId": "OfficeService_FindOfficeById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindOfficeByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "OfficeService"
        ]
      },
      "delete": {
        "summary": "Delete office by id",
        "description": "Use this API to delete office by id",
        "operationId": "OfficeService_DeleteOfficeById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteOfficeByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "OfficeService"
        ]
      },
      "patch": {
        "summary": "Update office by id",
        "description": "Use this API to update office by id",
        "operationId": "OfficeService_UpdateOfficeById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateOfficeByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Main"
                },
                "detail": {
                  "type": "string",
                  "example": "Main Office"
                }
              },
              "title": "Update Office By ID"
            }
          }
        ],
        "tags": [
          "OfficeService"
        ]
      }
    },
    "/policies": {
      "get": {
        "summary": "Find Policies",
        "description": "Use this API to find policies",
        "operationId": "PolicyService_FindPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PolicyService"
        ]
      },
      "post": {
        "summary": "Create a new policy",
        "description": "Use this API to create a new policy",
        "operationId": "PolicyService_CreatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreatePolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreatePolicyRequest"
            }
          }
        ],
        "tags": [
          "PolicyService"
        ]
      }
    },
    "/policies/{role}/{service}/{method}": {
      "delete": {
        "summary": "Delete policy",
        "description": "Use this API to delete policy",
        "operationId": "PolicyService_DeletePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeletePolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "method",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PolicyService"
        ]
      }
    },
    "/roles": {
      "get": {
        "summary": "Find Roles",
        "description": "Use this API to find roles",
        "operationId": "RoleService_FindRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "RoleService"
        ]
      },
      "post": {
        "summary": "Create a new role",
        "description": "Use this API to create a new role",
        "operationId": "RoleService_CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateRoleRequest"
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/roles/{id}": {
      "delete": {
        "summary": "Delete role by id",
        "description": "Use this API to delete role by id",
        "operationId": "RoleService_DeleteRoleById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteRoleByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/schedules": {
      "get": {
        "summary": "Find Schedules",
        "description": "Use this API to find schedules",
        "operationId": "ScheduleService_FindSchedules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindSchedulesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "ScheduleService"
        ]
      },
      "post": {
        "summary": "Create a new schedule",
        "description": "Use this API to create a new schedule",
        "operationId": "ScheduleService_CreateSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateScheduleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateScheduleRequest"
            }
          }
        ],
        "tags": [
          "ScheduleService"
        ]
      }
    },
    "/schedules/{id}": {
      "get": {
        "summary": "Find Schedule By Id",
        "description": "Use this API to find schedule by id",
        "operationId": "ScheduleService_FindScheduleById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindScheduleByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "ScheduleService"
        ]
      },
      "delete": {
        "summary": "Delete schedule by id",
        "description": "Use this API to delete schedule by id",
        "operationId": "ScheduleService_DeleteScheduleById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteScheduleByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "ScheduleService"
        ]
      },
      "patch": {
        "summary": "Update schedule by id",
        "description": "Use this API to update schedule by id",
        "operationId": "ScheduleService_UpdateScheduleById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateScheduleByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "totalCapacity": {
                  "type": "integer",
                  "format": "int64",
                  "example": "10"
                }
              },
              "title": "Update Schedule By ID"
            }
          }
        ],
        "tags": [
          "ScheduleService"
        ]
      }
    },
    "/services": {
      "get": {
        "summary": "Find Services",
        "description": "Use this API to find services",
        "operationId": "ServiceService_FindServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "ServiceService"
        ]
      },
      "post": {
        "summary": "Create a new service",
        "description": "Use this API to create a new service",
        "operationId": "ServiceService_CreateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateServiceRequest"
            }
          }
        ],
        "tags": [
          "ServiceService"
        ]
      }
    },
    "/services/{id}": {
      "delete": {
        "summary": "Delete service by id",
        "description": "Use this API to delete service by id",
        "operationId": "ServiceService_DeleteServiceById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteServiceByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "ServiceService"
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "Find Users",
        "description": "Use this API to find users",
        "operationId": "UserService_FindUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "verified",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "summary": "Create a new user",
        "description": "Use this API to create a new user",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Find User By Id",
        "description": "Use this API to find user by id",
        "operationId": "UserService_FindUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindUserByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "Delete user by id",
        "description": "Use this API to delete user by id",
        "operationId": "UserService_DeleteUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteUserByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "patch": {
        "summary": "Update user by id",
        "description": "Use this API to update user by id",
        "operationId": "UserService_UpdateUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateUserByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "johndee"
                },
                "email": {
                  "type": "string",
                  "example": "johndee@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "test1234"
                },
                "role": {
                  "type": "string",
                  "example": "user"
                },
                "avatar": {
                  "type": "string",
                  "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
                },
                "verified": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "title": "Update User By ID"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/workspaces": {
      "get": {
        "summary": "Find Workspaces",
        "description": "Use this API to find workspaces",
        "operationId": "WorkspaceService_FindWorkspaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbFindWorkspacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "verified",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "5"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "created_at:desc"
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      },
      "post": {
        "summary": "Create a new workspace",
        "description": "Use this API to create a new workspace",
        "operationId": "WorkspaceService_CreateWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateWorkspaceRequest"
            }
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    },
    "/workspaces/{userId}": {
      "delete": {
        "summary": "Delete user from workspace by user id",
        "description": "Use this API to delete user from workspace by user id",
        "operationId": "WorkspaceService_DeleteWorkspaceById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteWorkspaceByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    }
  },
  "definitions": {
    "pbAttendance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "2438ac3c-37eb-4902-adef-ed16b4431030"
        },
        "scheduleId": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        },
        "description": {
          "type": "string",
          "example": "Application for a work from office permit"
        },
        "adminUsername": {
          "type": "string",
          "example": "admin"
        },
        "status": {
          "type": "string",
          "example": "pending"
        },
        "statusAt": {
          "type": "string",
          "format": "date-time"
        },
        "statusInfo": {
          "type": "string",
          "example": "Sip"
        },
        "checkTemperature": {
          "type": "number",
          "format": "double",
          "example": "37.5"
        },
        "checkStatus": {
          "type": "string",
          "example": "pending"
        },
        "checkIn": {
          "type": "string",
          "format": "date-time"
        },
        "checkOut": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbAttendanceDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "2438ac3c-37eb-4902-adef-ed16b4431030"
        },
        "userUsername": {
          "type": "string",
          "example": "johndee"
        },
        "userAvatar": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        },
        "scheduleId": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "scheduleDate": {
          "type": "string",
          "format": "date-time"
        },
        "officeId": {
          "type": "string",
          "example": "1"
        },
        "officeName": {
          "type": "string",
          "example": "Main"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        },
        "description": {
          "type": "string",
          "example": "Application for a work from office permit"
        },
        "adminUsername": {
          "type": "string",
          "example": "admin"
        },
        "status": {
          "type": "string",
          "example": "pending"
        },
        "statusAt": {
          "type": "string",
          "format": "date-time"
        },
        "statusInfo": {
          "type": "string",
          "example": "Sip"
        },
        "checkTemperature": {
          "type": "number",
          "format": "double",
          "example": "37.5"
        },
        "checkStatus": {
          "type": "string",
          "example": "pending"
        },
        "checkIn": {
          "type": "string",
          "format": "date-time"
        },
        "checkOut": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbCertificate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "2438ac3c-37eb-4902-adef-ed16b4431030"
        },
        "dose": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        },
        "description": {
          "type": "string",
          "example": "Application for a work from office permit"
        },
        "adminUsername": {
          "type": "string",
          "example": "admin"
        },
        "status": {
          "type": "string",
          "example": "pending"
        },
        "statusAt": {
          "type": "string",
          "format": "date-time"
        },
        "statusInfo": {
          "type": "string",
          "example": "Sip"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbCertificateDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "2438ac3c-37eb-4902-adef-ed16b4431030"
        },
        "userUsername": {
          "type": "string",
          "example": "johndee"
        },
        "userAvatar": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        },
        "dose": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        },
        "description": {
          "type": "string",
          "example": "Application for a work from office permit"
        },
        "adminUsername": {
          "type": "string",
          "example": "admin"
        },
        "status": {
          "type": "string",
          "example": "pending"
        },
        "statusAt": {
          "type": "string",
          "format": "date-time"
        },
        "statusInfo": {
          "type": "string",
          "example": "Sip"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbChangeEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "johndee@gmail.com"
        }
      },
      "title": "Change Email"
    },
    "pbChangeEmailResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "message": {
          "type": "string",
          "example": "We sent an email with a verification code to johndee@gmail.com."
        }
      }
    },
    "pbCheckInResponse": {
      "type": "object",
      "properties": {
        "checkIn": {
          "$ref": "#/definitions/pbAttendance"
        }
      }
    },
    "pbCheckOutResponse": {
      "type": "object",
      "properties": {
        "checkOut": {
          "$ref": "#/definitions/pbAttendance"
        }
      }
    },
    "pbCreateAttendanceRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "2438ac3c-37eb-4902-adef-ed16b4431030"
        },
        "scheduleId": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "description": {
          "type": "string",
          "example": "Application for a work from office permit"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        }
      },
      "title": "Create Attendance"
    },
    "pbCreateAttendanceResponse": {
      "type": "object",
      "properties": {
        "attendance": {
          "$ref": "#/definitions/pbAttendance"
        }
      }
    },
    "pbCreateCertificateRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "2438ac3c-37eb-4902-adef-ed16b4431030"
        },
        "dose": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string",
          "example": "Application for a work from office permit"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        }
      },
      "title": "Create Certificate"
    },
    "pbCreateCertificateResponse": {
      "type": "object",
      "properties": {
        "certificate": {
          "$ref": "#/definitions/pbCertificate"
        }
      }
    },
    "pbCreateMethodRequest": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        }
      },
      "title": "Create Method"
    },
    "pbCreateMethodResponse": {
      "type": "object",
      "properties": {
        "method": {
          "$ref": "#/definitions/pbMethod"
        }
      }
    },
    "pbCreateOfficeRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Main"
        },
        "detail": {
          "type": "string",
          "example": "Main Office"
        }
      },
      "title": "Create Office"
    },
    "pbCreateOfficeResponse": {
      "type": "object",
      "properties": {
        "office": {
          "$ref": "#/definitions/pbOffice"
        }
      }
    },
    "pbCreatePolicyRequest": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "user"
        },
        "service": {
          "type": "string",
          "example": "pb.UserService"
        },
        "method": {
          "type": "string",
          "example": "GetMe"
        }
      },
      "title": "Create Policy"
    },
    "pbCreatePolicyResponse": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/pbPolicy"
        }
      }
    },
    "pbCreateRoleRequest": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "user"
        }
      },
      "title": "Create Role"
    },
    "pbCreateRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/pbRole"
        }
      }
    },
    "pbCreateScheduleRequest": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "totalCapacity": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "month": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "year": {
          "type": "integer",
          "format": "int64",
          "example": "2023"
        }
      },
      "title": "Create Schedule"
    },
    "pbCreateScheduleResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Schedule in a month created successfully"
        }
      }
    },
    "pbCreateServiceRequest": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "example": "pb.UserService"
        }
      },
      "title": "Create Service"
    },
    "pbCreateServiceResponse": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/pbService"
        }
      }
    },
    "pbCreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "johndee"
        },
        "email": {
          "type": "string",
          "example": "johndee@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "test1234"
        },
        "role": {
          "type": "string",
          "example": "user"
        },
        "avatar": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        },
        "verified": {
          "type": "boolean",
          "example": "true"
        }
      },
      "title": "Create User"
    },
    "pbCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "message": {
          "type": "string",
          "example": "We sent an email with a verification code to johndee@gmail.com."
        }
      }
    },
    "pbCreateWorkspaceRequest": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "2438ac3c-37eb-4902-adef-ed16b4431030"
        }
      },
      "title": "Create Workspace"
    },
    "pbCreateWorkspaceResponse": {
      "type": "object",
      "properties": {
        "workspace": {
          "$ref": "#/definitions/pbWorkspace"
        }
      }
    },
    "pbDeleteAttendanceByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Attendance deleted successfully"
        }
      }
    },
    "pbDeleteCertificateByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Certificate deleted successfully"
        }
      }
    },
    "pbDeleteMethodByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Method deleted successfully"
        }
      }
    },
    "pbDeleteOfficeByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Office deleted successfully"
        }
      }
    },
    "pbDeletePolicyResponse": {
      "type": "object",
      "properties": {
        "res": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "pbDeleteRoleByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Role deleted successfully"
        }
      }
    },
    "pbDeleteScheduleByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Schedule deleted successfully"
        }
      }
    },
    "pbDeleteServiceByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Service deleted successfully"
        }
      }
    },
    "pbDeleteUserByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "User deleted successfully"
        }
      }
    },
    "pbDeleteWorkspaceByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Workspace deleted successfully"
        }
      }
    },
    "pbFindAttendanceByIdResponse": {
      "type": "object",
      "properties": {
        "attendance": {
          "$ref": "#/definitions/pbAttendanceDetail"
        }
      }
    },
    "pbFindAttendancesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "attendances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbAttendanceDetail"
          }
        }
      }
    },
    "pbFindCertificateByIdResponse": {
      "type": "object",
      "properties": {
        "certificate": {
          "$ref": "#/definitions/pbCertificate"
        }
      }
    },
    "pbFindCertificatesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbCertificateDetail"
          }
        }
      }
    },
    "pbFindCheckByIdResponse": {
      "type": "object",
      "properties": {
        "check": {
          "$ref": "#/definitions/pbAttendanceDetail"
        }
      }
    },
    "pbFindChecksResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbAttendanceDetail"
          }
        }
      }
    },
    "pbFindMethodsResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "methods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbMethod"
          }
        }
      }
    },
    "pbFindOfficeByIdResponse": {
      "type": "object",
      "properties": {
        "office": {
          "$ref": "#/definitions/pbOffice"
        }
      }
    },
    "pbFindOfficesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "offices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbOffice"
          }
        }
      }
    },
    "pbFindPoliciesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbPolicy"
          }
        }
      }
    },
    "pbFindRolesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbRole"
          }
        }
      }
    },
    "pbFindScheduleByIdResponse": {
      "type": "object",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/pbScheduleWithOffice"
        }
      }
    },
    "pbFindSchedulesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbScheduleWithOffice"
          }
        }
      }
    },
    "pbFindServicesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbService"
          }
        }
      }
    },
    "pbFindUserByIdResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbFindUsersResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbUser"
          }
        }
      }
    },
    "pbFindWorkspacesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "totalPages": {
          "type": "integer",
          "format": "int64",
          "example": "2"
        },
        "page": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "example": "5"
        },
        "hasMore": {
          "type": "boolean",
          "example": "true"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbUser"
          }
        }
      }
    },
    "pbForgotPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "johndee@gmail.com"
        }
      },
      "title": "ForgotPassword"
    },
    "pbForgotPasswordResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "We sent an email with a password reset token to johndee@gmail.com."
        }
      }
    },
    "pbGetMeResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbImage": {
      "type": "object",
      "properties": {
        "Bucket": {
          "type": "string",
          "example": "safety"
        },
        "Key": {
          "type": "string",
          "example": "images/69d3091b-79c8-4448-a814-2dcb51a8521b-safety.png"
        },
        "ETag": {
          "type": "string",
          "example": "736410f9db16fd38329dc26f65ab4106"
        },
        "Size": {
          "type": "integer",
          "format": "int64",
          "example": "147939"
        },
        "LastModified": {
          "type": "string",
          "format": "date-time"
        },
        "Location": {
          "type": "string",
          "example": "us-east-1"
        },
        "VersionID": {
          "type": "string"
        },
        "Expiration": {
          "type": "string",
          "format": "date-time"
        },
        "ExpirationRuleID": {
          "type": "string"
        },
        "ChecksumCRC32": {
          "type": "string"
        },
        "ChecksumCRC32C": {
          "type": "string"
        },
        "ChecksumSHA1": {
          "type": "string"
        },
        "ChecksumSHA256": {
          "type": "string"
        }
      }
    },
    "pbLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "johndee@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "test1234"
        }
      },
      "title": "Login"
    },
    "pbLoginResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "accessToken": {
          "type": "string",
          "example": "v2.local.f5C8V6oKlwssi4pM2xYRiKb-9x_KNNIq5J0sjxID0PncuAICGkMATlaoIXarDge4VXMArwTONCgCdjkuVgMtr5wu8gTNwKCTxIHjJOsPKqI-uXSSb7JcxlrTw1Ls4Gz_2QDyYewxJ4Tt4EO9ezSojwE9kXsgfFOWxMe_8gkLna7_Zm3gpGssk_sRAmpavYHwpj8hvkiTwGnsq_W4DWjCZQbiva-KKbHTCklxcn3cofpniDbZ34rHkLODc8_BdEUjaMNF3VU2YVhQJxGh4FITkm_advds70s1bm1Ei1Te4DIuW9u49nHwZVTs4X11e6SbXy7UrCeFzfoZ4419uFN3RQLgw1zUSTqa6rsFy9msHZOH-Bnb5VihnUaoIEeEfLsUIWLIP5kBHcleSfljwGNq0oztqwmaRJIlN2hyTJxy0X5gSp3Z174150y-ZyckE8Np4B5X5D0BELD43zMO3FrPi3RUWm6ywFiF5PBMCBRJjNgvv-RodX24WA.U3pjenluayBJbml0aWF0aXZlIEVudGVycHJpc2Vz"
        },
        "refreshToken": {
          "type": "string",
          "example": "v2.local.f5C8V6oKlwssi4pM2xYRiKb-9x_KNNIq5J0sjxID0PncuAICGkMATlaoIXarDge4VXMArwTONCgCdjkuVgMtr5wu8gTNwKCTxIHjJOsPKqI-uXSSb7JcxlrTw1Ls4Gz_2QDyYewxJ4Tt4EO9ezSojwE9kXsgfFOWxMe_8gkLna7_Zm3gpGssk_sRAmpavYHwpj8hvkiTwGnsq_W4DWjCZQbiva-KKbHTCklxcn3cofpniDbZ34rHkLODc8_BdEUjaMNF3VU2YVhQJxGh4FITkm_advds70s1bm1Ei1Te4DIuW9u49nHwZVTs4X11e6SbXy7UrCeFzfoZ4419uFN3RQLgw1zUSTqa6rsFy9msHZOH-Bnb5VihnUaoIEeEfLsUIWLIP5kBHcleSfljwGNq0oztqwmaRJIlN2hyTJxy0X5gSp3Z174150y-ZyckE8Np4B5X5D0BELD43zMO3FrPi3RUWm6ywFiF5PBMCBRJjNgvv-RodX24WA.U3pjenluayBJbml0aWF0aXZlIEVudGVycHJpc2Vz"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "refreshTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbLogoutRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "example": "v2.local.f5C8V6oKlwssi4pM2xYRiKb-9x_KNNIq5J0sjxID0PncuAICGkMATlaoIXarDge4VXMArwTONCgCdjkuVgMtr5wu8gTNwKCTxIHjJOsPKqI-uXSSb7JcxlrTw1Ls4Gz_2QDyYewxJ4Tt4EO9ezSojwE9kXsgfFOWxMe_8gkLna7_Zm3gpGssk_sRAmpavYHwpj8hvkiTwGnsq_W4DWjCZQbiva-KKbHTCklxcn3cofpniDbZ34rHkLODc8_BdEUjaMNF3VU2YVhQJxGh4FITkm_advds70s1bm1Ei1Te4DIuW9u49nHwZVTs4X11e6SbXy7UrCeFzfoZ4419uFN3RQLgw1zUSTqa6rsFy9msHZOH-Bnb5VihnUaoIEeEfLsUIWLIP5kBHcleSfljwGNq0oztqwmaRJIlN2hyTJxy0X5gSp3Z174150y-ZyckE8Np4B5X5D0BELD43zMO3FrPi3RUWm6ywFiF5PBMCBRJjNgvv-RodX24WA.U3pjenluayBJbml0aWF0aXZlIEVudGVycHJpc2Vz"
        }
      },
      "title": "Logout"
    },
    "pbLogoutResponse": {
      "type": "object"
    },
    "pbMethod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "method": {
          "type": "string",
          "example": "CreateMethod"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbOffice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "name": {
          "type": "string",
          "example": "Main"
        },
        "detail": {
          "type": "string",
          "example": "Main Office"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbPolicy": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "user"
        },
        "service": {
          "type": "string",
          "example": "pb.UserService"
        },
        "method": {
          "type": "string",
          "example": "GetMe"
        }
      }
    },
    "pbRefreshAccessTokenRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "example": "v2.local.f5C8V6oKlwssi4pM2xYRiKb-9x_KNNIq5J0sjxID0PncuAICGkMATlaoIXarDge4VXMArwTONCgCdjkuVgMtr5wu8gTNwKCTxIHjJOsPKqI-uXSSb7JcxlrTw1Ls4Gz_2QDyYewxJ4Tt4EO9ezSojwE9kXsgfFOWxMe_8gkLna7_Zm3gpGssk_sRAmpavYHwpj8hvkiTwGnsq_W4DWjCZQbiva-KKbHTCklxcn3cofpniDbZ34rHkLODc8_BdEUjaMNF3VU2YVhQJxGh4FITkm_advds70s1bm1Ei1Te4DIuW9u49nHwZVTs4X11e6SbXy7UrCeFzfoZ4419uFN3RQLgw1zUSTqa6rsFy9msHZOH-Bnb5VihnUaoIEeEfLsUIWLIP5kBHcleSfljwGNq0oztqwmaRJIlN2hyTJxy0X5gSp3Z174150y-ZyckE8Np4B5X5D0BELD43zMO3FrPi3RUWm6ywFiF5PBMCBRJjNgvv-RodX24WA.U3pjenluayBJbml0aWF0aXZlIEVudGVycHJpc2Vz"
        }
      },
      "title": "Refresh Access Token"
    },
    "pbRefreshAccessTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "example": "v2.local.f5C8V6oKlwssi4pM2xYRiKb-9x_KNNIq5J0sjxID0PncuAICGkMATlaoIXarDge4VXMArwTONCgCdjkuVgMtr5wu8gTNwKCTxIHjJOsPKqI-uXSSb7JcxlrTw1Ls4Gz_2QDyYewxJ4Tt4EO9ezSojwE9kXsgfFOWxMe_8gkLna7_Zm3gpGssk_sRAmpavYHwpj8hvkiTwGnsq_W4DWjCZQbiva-KKbHTCklxcn3cofpniDbZ34rHkLODc8_BdEUjaMNF3VU2YVhQJxGh4FITkm_advds70s1bm1Ei1Te4DIuW9u49nHwZVTs4X11e6SbXy7UrCeFzfoZ4419uFN3RQLgw1zUSTqa6rsFy9msHZOH-Bnb5VihnUaoIEeEfLsUIWLIP5kBHcleSfljwGNq0oztqwmaRJIlN2hyTJxy0X5gSp3Z174150y-ZyckE8Np4B5X5D0BELD43zMO3FrPi3RUWm6ywFiF5PBMCBRJjNgvv-RodX24WA.U3pjenluayBJbml0aWF0aXZlIEVudGVycHJpc2Vz"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbRegisterRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "johndee"
        },
        "email": {
          "type": "string",
          "example": "johndee@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "test1234"
        }
      },
      "title": "Register"
    },
    "pbRegisterResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "message": {
          "type": "string",
          "example": "We sent an email with a verification code to johndee@gmail.com."
        }
      }
    },
    "pbResetPasswordResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Reset password successful"
        }
      }
    },
    "pbRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "role": {
          "type": "string",
          "example": "user"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbSchedule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "capacity": {
          "type": "integer",
          "format": "int64",
          "example": "7"
        },
        "totalCapacity": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbScheduleWithOffice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "capacity": {
          "type": "integer",
          "format": "int64",
          "example": "7"
        },
        "totalCapacity": {
          "type": "integer",
          "format": "int64",
          "example": "10"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "officeName": {
          "type": "string",
          "example": "Main"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbService": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "service": {
          "type": "string",
          "example": "pb.UserService"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbUpdateAttendanceByIdResponse": {
      "type": "object",
      "properties": {
        "attendance": {
          "$ref": "#/definitions/pbAttendance"
        }
      }
    },
    "pbUpdateCertificateByIdResponse": {
      "type": "object",
      "properties": {
        "certificate": {
          "$ref": "#/definitions/pbCertificate"
        }
      }
    },
    "pbUpdateMeRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "johndee"
        },
        "avatar": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        }
      },
      "title": "Update Me"
    },
    "pbUpdateMeResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbUpdateOfficeByIdResponse": {
      "type": "object",
      "properties": {
        "office": {
          "$ref": "#/definitions/pbOffice"
        }
      }
    },
    "pbUpdateScheduleByIdResponse": {
      "type": "object",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/pbSchedule"
        }
      }
    },
    "pbUpdateUserByIdResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbUploadImageResponse": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/pbImage"
        }
      }
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "2438ac3c-37eb-4902-adef-ed16b4431030"
        },
        "username": {
          "type": "string",
          "example": "johndee"
        },
        "email": {
          "type": "string",
          "example": "johndee@gmail.com"
        },
        "role": {
          "type": "string",
          "example": "user"
        },
        "avatar": {
          "type": "string",
          "example": "https://avatars.dicebear.com/api/open-peeps/johndee.svg"
        },
        "verified": {
          "type": "boolean",
          "example": "true"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbVerifyEmailResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Email verified successfully"
        }
      }
    },
    "pbWorkspace": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "example": "2438ac3c-37eb-4902-adef-ed16b4431030"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
