// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: auth_messages.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username  string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email     string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Role      string                 `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Avatar    string                 `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Verified  bool                   `protobuf:"varint,6,opt,name=verified,proto3" json:"verified,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Register
type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Login
type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{3}
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User                  *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	AccessToken           string                 `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken          string                 `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	AccessTokenExpiresAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=access_token_expires_at,json=accessTokenExpiresAt,proto3" json:"access_token_expires_at,omitempty"`
	RefreshTokenExpiresAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=refresh_token_expires_at,json=refreshTokenExpiresAt,proto3" json:"refresh_token_expires_at,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{4}
}

func (x *LoginResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginResponse) GetAccessTokenExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AccessTokenExpiresAt
	}
	return nil
}

func (x *LoginResponse) GetRefreshTokenExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RefreshTokenExpiresAt
	}
	return nil
}

// ForgotPassword
type ForgotPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ForgotPasswordRequest) Reset() {
	*x = ForgotPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgotPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgotPasswordRequest) ProtoMessage() {}

func (x *ForgotPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgotPasswordRequest.ProtoReflect.Descriptor instead.
func (*ForgotPasswordRequest) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{5}
}

func (x *ForgotPasswordRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ForgotPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ForgotPasswordResponse) Reset() {
	*x = ForgotPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgotPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgotPasswordResponse) ProtoMessage() {}

func (x *ForgotPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgotPasswordResponse.ProtoReflect.Descriptor instead.
func (*ForgotPasswordResponse) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{6}
}

func (x *ForgotPasswordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ResetPassword
type ResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResetToken string `protobuf:"bytes,1,opt,name=reset_token,json=resetToken,proto3" json:"reset_token,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{7}
}

func (x *ResetPasswordRequest) GetResetToken() string {
	if x != nil {
		return x.ResetToken
	}
	return ""
}

func (x *ResetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ResetPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResetPasswordResponse) Reset() {
	*x = ResetPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordResponse) ProtoMessage() {}

func (x *ResetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordResponse.ProtoReflect.Descriptor instead.
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{8}
}

func (x *ResetPasswordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// VerifyEmail
type VerifyEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifyEmailRequest) Reset() {
	*x = VerifyEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailRequest) ProtoMessage() {}

func (x *VerifyEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailRequest.ProtoReflect.Descriptor instead.
func (*VerifyEmailRequest) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{9}
}

func (x *VerifyEmailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type VerifyEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VerifyEmailResponse) Reset() {
	*x = VerifyEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailResponse) ProtoMessage() {}

func (x *VerifyEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailResponse.ProtoReflect.Descriptor instead.
func (*VerifyEmailResponse) Descriptor() ([]byte, []int) {
	return file_auth_messages_proto_rawDescGZIP(), []int{10}
}

func (x *VerifyEmailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_auth_messages_proto protoreflect.FileDescriptor

var file_auth_messages_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0x92, 0x41, 0x2f, 0x4a, 0x26, 0x22,
	0x32, 0x34, 0x33, 0x38, 0x61, 0x63, 0x33, 0x63, 0x2d, 0x33, 0x37, 0x65, 0x62, 0x2d, 0x34, 0x39,
	0x30, 0x32, 0x2d, 0x61, 0x64, 0x65, 0x66, 0x2d, 0x65, 0x64, 0x31, 0x36, 0x62, 0x34, 0x34, 0x33,
	0x31, 0x30, 0x33, 0x30, 0x22, 0xa2, 0x02, 0x04, 0x75, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x4a, 0x09, 0x22, 0x6a, 0x6f, 0x68, 0x6e, 0x64, 0x65,
	0x65, 0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0x92, 0x41, 0x15,
	0x4a, 0x13, 0x22, 0x6a, 0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x4a,
	0x06, 0x22, 0x75, 0x73, 0x65, 0x72, 0x22, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x56, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92,
	0x41, 0x3b, 0x4a, 0x39, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x73, 0x2e, 0x64, 0x69, 0x63, 0x65, 0x62, 0x65, 0x61, 0x72, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x70, 0x65, 0x65, 0x70, 0x73,
	0x2f, 0x6a, 0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65, 0x2e, 0x73, 0x76, 0x67, 0x22, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x27, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x4a, 0x06, 0x22, 0x74,
	0x72, 0x75, 0x65, 0x22, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x05, 0x92, 0x41, 0x0b, 0x4a, 0x09, 0x22, 0x6a, 0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65,
	0x22, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x60, 0x01, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x6a, 0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65,
	0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x08, 0x92, 0x41, 0x0c,
	0x4a, 0x0a, 0x22, 0x74, 0x65, 0x73, 0x74, 0x31, 0x32, 0x33, 0x34, 0x22, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x46, 0x92, 0x41, 0x43, 0x4a,
	0x41, 0x22, 0x57, 0x65, 0x20, 0x73, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x20, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x6a,
	0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x0c, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x60, 0x01, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x6a, 0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65,
	0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x08, 0x92, 0x41, 0x0c,
	0x4a, 0x0a, 0x22, 0x74, 0x65, 0x73, 0x74, 0x31, 0x32, 0x33, 0x34, 0x22, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x87, 0x0b, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0xd5, 0x04, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0xb1, 0x04,
	0x92, 0x41, 0xad, 0x04, 0x4a, 0xaa, 0x04, 0x22, 0x76, 0x32, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x2e, 0x66, 0x35, 0x43, 0x38, 0x56, 0x36, 0x6f, 0x4b, 0x6c, 0x77, 0x73, 0x73, 0x69, 0x34, 0x70,
	0x4d, 0x32, 0x78, 0x59, 0x52, 0x69, 0x4b, 0x62, 0x2d, 0x39, 0x78, 0x5f, 0x4b, 0x4e, 0x4e, 0x49,
	0x71, 0x35, 0x4a, 0x30, 0x73, 0x6a, 0x78, 0x49, 0x44, 0x30, 0x50, 0x6e, 0x63, 0x75, 0x41, 0x49,
	0x43, 0x47, 0x6b, 0x4d, 0x41, 0x54, 0x6c, 0x61, 0x6f, 0x49, 0x58, 0x61, 0x72, 0x44, 0x67, 0x65,
	0x34, 0x56, 0x58, 0x4d, 0x41, 0x72, 0x77, 0x54, 0x4f, 0x4e, 0x43, 0x67, 0x43, 0x64, 0x6a, 0x6b,
	0x75, 0x56, 0x67, 0x4d, 0x74, 0x72, 0x35, 0x77, 0x75, 0x38, 0x67, 0x54, 0x4e, 0x77, 0x4b, 0x43,
	0x54, 0x78, 0x49, 0x48, 0x6a, 0x4a, 0x4f, 0x73, 0x50, 0x4b, 0x71, 0x49, 0x2d, 0x75, 0x58, 0x53,
	0x53, 0x62, 0x37, 0x4a, 0x63, 0x78, 0x6c, 0x72, 0x54, 0x77, 0x31, 0x4c, 0x73, 0x34, 0x47, 0x7a,
	0x5f, 0x32, 0x51, 0x44, 0x79, 0x59, 0x65, 0x77, 0x78, 0x4a, 0x34, 0x54, 0x74, 0x34, 0x45, 0x4f,
	0x39, 0x65, 0x7a, 0x53, 0x6f, 0x6a, 0x77, 0x45, 0x39, 0x6b, 0x58, 0x73, 0x67, 0x66, 0x46, 0x4f,
	0x57, 0x78, 0x4d, 0x65, 0x5f, 0x38, 0x67, 0x6b, 0x4c, 0x6e, 0x61, 0x37, 0x5f, 0x5a, 0x6d, 0x33,
	0x67, 0x70, 0x47, 0x73, 0x73, 0x6b, 0x5f, 0x73, 0x52, 0x41, 0x6d, 0x70, 0x61, 0x76, 0x59, 0x48,
	0x77, 0x70, 0x6a, 0x38, 0x68, 0x76, 0x6b, 0x69, 0x54, 0x77, 0x47, 0x6e, 0x73, 0x71, 0x5f, 0x57,
	0x34, 0x44, 0x57, 0x6a, 0x43, 0x5a, 0x51, 0x62, 0x69, 0x76, 0x61, 0x2d, 0x4b, 0x4b, 0x62, 0x48,
	0x54, 0x43, 0x6b, 0x6c, 0x78, 0x63, 0x6e, 0x33, 0x63, 0x6f, 0x66, 0x70, 0x6e, 0x69, 0x44, 0x62,
	0x5a, 0x33, 0x34, 0x72, 0x48, 0x6b, 0x4c, 0x4f, 0x44, 0x63, 0x38, 0x5f, 0x42, 0x64, 0x45, 0x55,
	0x6a, 0x61, 0x4d, 0x4e, 0x46, 0x33, 0x56, 0x55, 0x32, 0x59, 0x56, 0x68, 0x51, 0x4a, 0x78, 0x47,
	0x68, 0x34, 0x46, 0x49, 0x54, 0x6b, 0x6d, 0x5f, 0x61, 0x64, 0x76, 0x64, 0x73, 0x37, 0x30, 0x73,
	0x31, 0x62, 0x6d, 0x31, 0x45, 0x69, 0x31, 0x54, 0x65, 0x34, 0x44, 0x49, 0x75, 0x57, 0x39, 0x75,
	0x34, 0x39, 0x6e, 0x48, 0x77, 0x5a, 0x56, 0x54, 0x73, 0x34, 0x58, 0x31, 0x31, 0x65, 0x36, 0x53,
	0x62, 0x58, 0x79, 0x37, 0x55, 0x72, 0x43, 0x65, 0x46, 0x7a, 0x66, 0x6f, 0x5a, 0x34, 0x34, 0x31,
	0x39, 0x75, 0x46, 0x4e, 0x33, 0x52, 0x51, 0x4c, 0x67, 0x77, 0x31, 0x7a, 0x55, 0x53, 0x54, 0x71,
	0x61, 0x36, 0x72, 0x73, 0x46, 0x79, 0x39, 0x6d, 0x73, 0x48, 0x5a, 0x4f, 0x48, 0x2d, 0x42, 0x6e,
	0x62, 0x35, 0x56, 0x69, 0x68, 0x6e, 0x55, 0x61, 0x6f, 0x49, 0x45, 0x65, 0x45, 0x66, 0x4c, 0x73,
	0x55, 0x49, 0x57, 0x4c, 0x49, 0x50, 0x35, 0x6b, 0x42, 0x48, 0x63, 0x6c, 0x65, 0x53, 0x66, 0x6c,
	0x6a, 0x77, 0x47, 0x4e, 0x71, 0x30, 0x6f, 0x7a, 0x74, 0x71, 0x77, 0x6d, 0x61, 0x52, 0x4a, 0x49,
	0x6c, 0x4e, 0x32, 0x68, 0x79, 0x54, 0x4a, 0x78, 0x79, 0x30, 0x58, 0x35, 0x67, 0x53, 0x70, 0x33,
	0x5a, 0x31, 0x37, 0x34, 0x31, 0x35, 0x30, 0x79, 0x2d, 0x5a, 0x79, 0x63, 0x6b, 0x45, 0x38, 0x4e,
	0x70, 0x34, 0x42, 0x35, 0x58, 0x35, 0x44, 0x30, 0x42, 0x45, 0x4c, 0x44, 0x34, 0x33, 0x7a, 0x4d,
	0x4f, 0x33, 0x46, 0x72, 0x50, 0x69, 0x33, 0x52, 0x55, 0x57, 0x6d, 0x36, 0x79, 0x77, 0x46, 0x69,
	0x46, 0x35, 0x50, 0x42, 0x4d, 0x43, 0x42, 0x52, 0x4a, 0x6a, 0x4e, 0x67, 0x76, 0x76, 0x2d, 0x52,
	0x6f, 0x64, 0x58, 0x32, 0x34, 0x57, 0x41, 0x2e, 0x55, 0x33, 0x70, 0x6a, 0x65, 0x6e, 0x6c, 0x75,
	0x61, 0x79, 0x42, 0x4a, 0x62, 0x6d, 0x6c, 0x30, 0x61, 0x57, 0x46, 0x30, 0x61, 0x58, 0x5a, 0x6c,
	0x49, 0x45, 0x56, 0x75, 0x64, 0x47, 0x56, 0x79, 0x63, 0x48, 0x4a, 0x70, 0x63, 0x32, 0x56, 0x7a,
	0x22, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0xd7,
	0x04, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0xb1, 0x04, 0x92, 0x41, 0xad, 0x04, 0x4a, 0xaa, 0x04,
	0x22, 0x76, 0x32, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x66, 0x35, 0x43, 0x38, 0x56, 0x36,
	0x6f, 0x4b, 0x6c, 0x77, 0x73, 0x73, 0x69, 0x34, 0x70, 0x4d, 0x32, 0x78, 0x59, 0x52, 0x69, 0x4b,
	0x62, 0x2d, 0x39, 0x78, 0x5f, 0x4b, 0x4e, 0x4e, 0x49, 0x71, 0x35, 0x4a, 0x30, 0x73, 0x6a, 0x78,
	0x49, 0x44, 0x30, 0x50, 0x6e, 0x63, 0x75, 0x41, 0x49, 0x43, 0x47, 0x6b, 0x4d, 0x41, 0x54, 0x6c,
	0x61, 0x6f, 0x49, 0x58, 0x61, 0x72, 0x44, 0x67, 0x65, 0x34, 0x56, 0x58, 0x4d, 0x41, 0x72, 0x77,
	0x54, 0x4f, 0x4e, 0x43, 0x67, 0x43, 0x64, 0x6a, 0x6b, 0x75, 0x56, 0x67, 0x4d, 0x74, 0x72, 0x35,
	0x77, 0x75, 0x38, 0x67, 0x54, 0x4e, 0x77, 0x4b, 0x43, 0x54, 0x78, 0x49, 0x48, 0x6a, 0x4a, 0x4f,
	0x73, 0x50, 0x4b, 0x71, 0x49, 0x2d, 0x75, 0x58, 0x53, 0x53, 0x62, 0x37, 0x4a, 0x63, 0x78, 0x6c,
	0x72, 0x54, 0x77, 0x31, 0x4c, 0x73, 0x34, 0x47, 0x7a, 0x5f, 0x32, 0x51, 0x44, 0x79, 0x59, 0x65,
	0x77, 0x78, 0x4a, 0x34, 0x54, 0x74, 0x34, 0x45, 0x4f, 0x39, 0x65, 0x7a, 0x53, 0x6f, 0x6a, 0x77,
	0x45, 0x39, 0x6b, 0x58, 0x73, 0x67, 0x66, 0x46, 0x4f, 0x57, 0x78, 0x4d, 0x65, 0x5f, 0x38, 0x67,
	0x6b, 0x4c, 0x6e, 0x61, 0x37, 0x5f, 0x5a, 0x6d, 0x33, 0x67, 0x70, 0x47, 0x73, 0x73, 0x6b, 0x5f,
	0x73, 0x52, 0x41, 0x6d, 0x70, 0x61, 0x76, 0x59, 0x48, 0x77, 0x70, 0x6a, 0x38, 0x68, 0x76, 0x6b,
	0x69, 0x54, 0x77, 0x47, 0x6e, 0x73, 0x71, 0x5f, 0x57, 0x34, 0x44, 0x57, 0x6a, 0x43, 0x5a, 0x51,
	0x62, 0x69, 0x76, 0x61, 0x2d, 0x4b, 0x4b, 0x62, 0x48, 0x54, 0x43, 0x6b, 0x6c, 0x78, 0x63, 0x6e,
	0x33, 0x63, 0x6f, 0x66, 0x70, 0x6e, 0x69, 0x44, 0x62, 0x5a, 0x33, 0x34, 0x72, 0x48, 0x6b, 0x4c,
	0x4f, 0x44, 0x63, 0x38, 0x5f, 0x42, 0x64, 0x45, 0x55, 0x6a, 0x61, 0x4d, 0x4e, 0x46, 0x33, 0x56,
	0x55, 0x32, 0x59, 0x56, 0x68, 0x51, 0x4a, 0x78, 0x47, 0x68, 0x34, 0x46, 0x49, 0x54, 0x6b, 0x6d,
	0x5f, 0x61, 0x64, 0x76, 0x64, 0x73, 0x37, 0x30, 0x73, 0x31, 0x62, 0x6d, 0x31, 0x45, 0x69, 0x31,
	0x54, 0x65, 0x34, 0x44, 0x49, 0x75, 0x57, 0x39, 0x75, 0x34, 0x39, 0x6e, 0x48, 0x77, 0x5a, 0x56,
	0x54, 0x73, 0x34, 0x58, 0x31, 0x31, 0x65, 0x36, 0x53, 0x62, 0x58, 0x79, 0x37, 0x55, 0x72, 0x43,
	0x65, 0x46, 0x7a, 0x66, 0x6f, 0x5a, 0x34, 0x34, 0x31, 0x39, 0x75, 0x46, 0x4e, 0x33, 0x52, 0x51,
	0x4c, 0x67, 0x77, 0x31, 0x7a, 0x55, 0x53, 0x54, 0x71, 0x61, 0x36, 0x72, 0x73, 0x46, 0x79, 0x39,
	0x6d, 0x73, 0x48, 0x5a, 0x4f, 0x48, 0x2d, 0x42, 0x6e, 0x62, 0x35, 0x56, 0x69, 0x68, 0x6e, 0x55,
	0x61, 0x6f, 0x49, 0x45, 0x65, 0x45, 0x66, 0x4c, 0x73, 0x55, 0x49, 0x57, 0x4c, 0x49, 0x50, 0x35,
	0x6b, 0x42, 0x48, 0x63, 0x6c, 0x65, 0x53, 0x66, 0x6c, 0x6a, 0x77, 0x47, 0x4e, 0x71, 0x30, 0x6f,
	0x7a, 0x74, 0x71, 0x77, 0x6d, 0x61, 0x52, 0x4a, 0x49, 0x6c, 0x4e, 0x32, 0x68, 0x79, 0x54, 0x4a,
	0x78, 0x79, 0x30, 0x58, 0x35, 0x67, 0x53, 0x70, 0x33, 0x5a, 0x31, 0x37, 0x34, 0x31, 0x35, 0x30,
	0x79, 0x2d, 0x5a, 0x79, 0x63, 0x6b, 0x45, 0x38, 0x4e, 0x70, 0x34, 0x42, 0x35, 0x58, 0x35, 0x44,
	0x30, 0x42, 0x45, 0x4c, 0x44, 0x34, 0x33, 0x7a, 0x4d, 0x4f, 0x33, 0x46, 0x72, 0x50, 0x69, 0x33,
	0x52, 0x55, 0x57, 0x6d, 0x36, 0x79, 0x77, 0x46, 0x69, 0x46, 0x35, 0x50, 0x42, 0x4d, 0x43, 0x42,
	0x52, 0x4a, 0x6a, 0x4e, 0x67, 0x76, 0x76, 0x2d, 0x52, 0x6f, 0x64, 0x58, 0x32, 0x34, 0x57, 0x41,
	0x2e, 0x55, 0x33, 0x70, 0x6a, 0x65, 0x6e, 0x6c, 0x75, 0x61, 0x79, 0x42, 0x4a, 0x62, 0x6d, 0x6c,
	0x30, 0x61, 0x57, 0x46, 0x30, 0x61, 0x58, 0x5a, 0x6c, 0x49, 0x45, 0x56, 0x75, 0x64, 0x47, 0x56,
	0x79, 0x63, 0x48, 0x4a, 0x70, 0x63, 0x32, 0x56, 0x7a, 0x22, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x51, 0x0a, 0x17, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x53, 0x0a, 0x18, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x22, 0x4e, 0x0a, 0x15, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60,
	0x01, 0x92, 0x41, 0x15, 0x4a, 0x13, 0x22, 0x6a, 0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65, 0x40, 0x67,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x7d, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x49, 0x92, 0x41, 0x46,
	0x4a, 0x44, 0x22, 0x57, 0x65, 0x20, 0x73, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x20, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x20, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20,
	0x74, 0x6f, 0x20, 0x6a, 0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x6b, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x08, 0x92, 0x41, 0x0c, 0x4a, 0x0a, 0x22, 0x74, 0x65, 0x73, 0x74, 0x31, 0x32, 0x33,
	0x34, 0x22, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x53, 0x0a, 0x15,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0x92, 0x41, 0x1d, 0x4a, 0x1b, 0x22, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x28, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x53, 0x0a, 0x13, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x22, 0x92, 0x41, 0x1f, 0x4a, 0x1d, 0x22, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x20, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_auth_messages_proto_rawDescOnce sync.Once
	file_auth_messages_proto_rawDescData = file_auth_messages_proto_rawDesc
)

func file_auth_messages_proto_rawDescGZIP() []byte {
	file_auth_messages_proto_rawDescOnce.Do(func() {
		file_auth_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_messages_proto_rawDescData)
	})
	return file_auth_messages_proto_rawDescData
}

var file_auth_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_auth_messages_proto_goTypes = []interface{}{
	(*User)(nil),                   // 0: pb.User
	(*RegisterRequest)(nil),        // 1: pb.RegisterRequest
	(*RegisterResponse)(nil),       // 2: pb.RegisterResponse
	(*LoginRequest)(nil),           // 3: pb.LoginRequest
	(*LoginResponse)(nil),          // 4: pb.LoginResponse
	(*ForgotPasswordRequest)(nil),  // 5: pb.ForgotPasswordRequest
	(*ForgotPasswordResponse)(nil), // 6: pb.ForgotPasswordResponse
	(*ResetPasswordRequest)(nil),   // 7: pb.ResetPasswordRequest
	(*ResetPasswordResponse)(nil),  // 8: pb.ResetPasswordResponse
	(*VerifyEmailRequest)(nil),     // 9: pb.VerifyEmailRequest
	(*VerifyEmailResponse)(nil),    // 10: pb.VerifyEmailResponse
	(*timestamppb.Timestamp)(nil),  // 11: google.protobuf.Timestamp
}
var file_auth_messages_proto_depIdxs = []int32{
	11, // 0: pb.User.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: pb.User.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: pb.RegisterResponse.user:type_name -> pb.User
	0,  // 3: pb.LoginResponse.user:type_name -> pb.User
	11, // 4: pb.LoginResponse.access_token_expires_at:type_name -> google.protobuf.Timestamp
	11, // 5: pb.LoginResponse.refresh_token_expires_at:type_name -> google.protobuf.Timestamp
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_auth_messages_proto_init() }
func file_auth_messages_proto_init() {
	if File_auth_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auth_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgotPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgotPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_auth_messages_proto_goTypes,
		DependencyIndexes: file_auth_messages_proto_depIdxs,
		MessageInfos:      file_auth_messages_proto_msgTypes,
	}.Build()
	File_auth_messages_proto = out.File
	file_auth_messages_proto_rawDesc = nil
	file_auth_messages_proto_goTypes = nil
	file_auth_messages_proto_depIdxs = nil
}
