// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: schedule_messages.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Capacity      uint32                 `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	TotalCapacity uint32                 `protobuf:"varint,3,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`
	OfficeId      uint32                 `protobuf:"varint,4,opt,name=office_id,json=officeId,proto3" json:"office_id,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Schedule) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Schedule) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *Schedule) GetTotalCapacity() uint32 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

func (x *Schedule) GetOfficeId() uint32 {
	if x != nil {
		return x.OfficeId
	}
	return 0
}

func (x *Schedule) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Schedule) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Schedule) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ScheduleWithOffice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Capacity      uint32                 `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	TotalCapacity uint32                 `protobuf:"varint,3,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`
	OfficeId      uint32                 `protobuf:"varint,4,opt,name=office_id,json=officeId,proto3" json:"office_id,omitempty"`
	OfficeName    string                 `protobuf:"bytes,5,opt,name=office_name,json=officeName,proto3" json:"office_name,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ScheduleWithOffice) Reset() {
	*x = ScheduleWithOffice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleWithOffice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWithOffice) ProtoMessage() {}

func (x *ScheduleWithOffice) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWithOffice.ProtoReflect.Descriptor instead.
func (*ScheduleWithOffice) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleWithOffice) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScheduleWithOffice) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *ScheduleWithOffice) GetTotalCapacity() uint32 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

func (x *ScheduleWithOffice) GetOfficeId() uint32 {
	if x != nil {
		return x.OfficeId
	}
	return 0
}

func (x *ScheduleWithOffice) GetOfficeName() string {
	if x != nil {
		return x.OfficeName
	}
	return ""
}

func (x *ScheduleWithOffice) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ScheduleWithOffice) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ScheduleWithOffice) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Create Schedule
type CreateScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfficeId      uint32 `protobuf:"varint,1,opt,name=office_id,json=officeId,proto3" json:"office_id,omitempty"`
	TotalCapacity uint32 `protobuf:"varint,2,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`
	Month         uint32 `protobuf:"varint,3,opt,name=month,proto3" json:"month,omitempty"`
	Year          uint32 `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *CreateScheduleRequest) Reset() {
	*x = CreateScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScheduleRequest) ProtoMessage() {}

func (x *CreateScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateScheduleRequest) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{2}
}

func (x *CreateScheduleRequest) GetOfficeId() uint32 {
	if x != nil {
		return x.OfficeId
	}
	return 0
}

func (x *CreateScheduleRequest) GetTotalCapacity() uint32 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

func (x *CreateScheduleRequest) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *CreateScheduleRequest) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type CreateScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateScheduleResponse) Reset() {
	*x = CreateScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScheduleResponse) ProtoMessage() {}

func (x *CreateScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScheduleResponse.ProtoReflect.Descriptor instead.
func (*CreateScheduleResponse) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{3}
}

func (x *CreateScheduleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Update Schedule By ID
type UpdateScheduleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TotalCapacity uint32 `protobuf:"varint,2,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`
}

func (x *UpdateScheduleByIdRequest) Reset() {
	*x = UpdateScheduleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScheduleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleByIdRequest) ProtoMessage() {}

func (x *UpdateScheduleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleByIdRequest.ProtoReflect.Descriptor instead.
func (*UpdateScheduleByIdRequest) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateScheduleByIdRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateScheduleByIdRequest) GetTotalCapacity() uint32 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

type UpdateScheduleByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule *Schedule `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *UpdateScheduleByIdResponse) Reset() {
	*x = UpdateScheduleByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScheduleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleByIdResponse) ProtoMessage() {}

func (x *UpdateScheduleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleByIdResponse.ProtoReflect.Descriptor instead.
func (*UpdateScheduleByIdResponse) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateScheduleByIdResponse) GetSchedule() *Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

// Delete Schedule By ID
type DeleteScheduleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteScheduleByIdRequest) Reset() {
	*x = DeleteScheduleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScheduleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScheduleByIdRequest) ProtoMessage() {}

func (x *DeleteScheduleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScheduleByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteScheduleByIdRequest) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteScheduleByIdRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteScheduleByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteScheduleByIdResponse) Reset() {
	*x = DeleteScheduleByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteScheduleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScheduleByIdResponse) ProtoMessage() {}

func (x *DeleteScheduleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScheduleByIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteScheduleByIdResponse) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteScheduleByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Find Schedules
type FindSchedulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfficeId uint32 `protobuf:"varint,1,opt,name=office_id,json=officeId,proto3" json:"office_id,omitempty"`
	Month    uint32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Year     uint32 `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	Page     uint32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit    uint32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Sort     string `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *FindSchedulesRequest) Reset() {
	*x = FindSchedulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSchedulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSchedulesRequest) ProtoMessage() {}

func (x *FindSchedulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSchedulesRequest.ProtoReflect.Descriptor instead.
func (*FindSchedulesRequest) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{8}
}

func (x *FindSchedulesRequest) GetOfficeId() uint32 {
	if x != nil {
		return x.OfficeId
	}
	return 0
}

func (x *FindSchedulesRequest) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *FindSchedulesRequest) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *FindSchedulesRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindSchedulesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindSchedulesRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type FindSchedulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount uint32                `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalPages uint32                `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	Page       uint32                `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit      uint32                `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	HasMore    bool                  `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Schedules  []*ScheduleWithOffice `protobuf:"bytes,6,rep,name=schedules,proto3" json:"schedules,omitempty"`
}

func (x *FindSchedulesResponse) Reset() {
	*x = FindSchedulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSchedulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSchedulesResponse) ProtoMessage() {}

func (x *FindSchedulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSchedulesResponse.ProtoReflect.Descriptor instead.
func (*FindSchedulesResponse) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{9}
}

func (x *FindSchedulesResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *FindSchedulesResponse) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *FindSchedulesResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindSchedulesResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindSchedulesResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *FindSchedulesResponse) GetSchedules() []*ScheduleWithOffice {
	if x != nil {
		return x.Schedules
	}
	return nil
}

// Find Schedule By ID
type FindScheduleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindScheduleByIdRequest) Reset() {
	*x = FindScheduleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindScheduleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindScheduleByIdRequest) ProtoMessage() {}

func (x *FindScheduleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindScheduleByIdRequest.ProtoReflect.Descriptor instead.
func (*FindScheduleByIdRequest) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{10}
}

func (x *FindScheduleByIdRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindScheduleByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule *ScheduleWithOffice `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *FindScheduleByIdResponse) Reset() {
	*x = FindScheduleByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindScheduleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindScheduleByIdResponse) ProtoMessage() {}

func (x *FindScheduleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindScheduleByIdResponse.ProtoReflect.Descriptor instead.
func (*FindScheduleByIdResponse) Descriptor() ([]byte, []int) {
	return file_schedule_messages_proto_rawDescGZIP(), []int{11}
}

func (x *FindScheduleByIdResponse) GetSchedule() *ScheduleWithOffice {
	if x != nil {
		return x.Schedule
	}
	return nil
}

var File_schedule_messages_proto protoreflect.FileDescriptor

var file_schedule_messages_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x02, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x37, 0x22, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0x92, 0x41,
	0x06, 0x4a, 0x04, 0x22, 0x31, 0x30, 0x22, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03,
	0x22, 0x31, 0x22, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x81, 0x03, 0x0a, 0x12, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x37, 0x22,
	0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x09, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22, 0x31, 0x30, 0x22, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x09,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x4a, 0x06, 0x22,
	0x4d, 0x61, 0x69, 0x6e, 0x22, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x0f, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x92, 0x41, 0x05,
	0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00,
	0x92, 0x41, 0x06, 0x4a, 0x04, 0x22, 0x31, 0x30, 0x22, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x11, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x0c,
	0x28, 0x01, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x2a, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x16, 0xfa, 0x42, 0x08, 0x2a, 0x06, 0x18, 0xb8, 0x17, 0x28, 0xd0, 0x0f, 0x92, 0x41, 0x08, 0x4a,
	0x06, 0x22, 0x32, 0x30, 0x32, 0x33, 0x22, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x63, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0x92, 0x41, 0x2c, 0x4a, 0x2a, 0x22,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x20, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x20, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x75, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0f, 0xfa, 0x42, 0x04,
	0x2a, 0x02, 0x20, 0x00, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x37, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22, 0x31, 0x30, 0x22, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x46, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x22, 0x3c, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0f, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x5c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x24,
	0x92, 0x41, 0x21, 0x4a, 0x1f, 0x22, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x20, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75,
	0x6c, 0x6c, 0x79, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x90, 0x02,
	0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03,
	0x22, 0x31, 0x22, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x11, 0xfa, 0x42,
	0x06, 0x2a, 0x04, 0x18, 0x0c, 0x28, 0x01, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52,
	0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x16, 0xfa, 0x42, 0x08, 0x2a, 0x06, 0x18, 0xb8, 0x17, 0x28, 0xd0,
	0x0f, 0x92, 0x41, 0x08, 0x4a, 0x06, 0x22, 0x32, 0x30, 0x32, 0x33, 0x22, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x0c, 0x92, 0x41, 0x09, 0x3a, 0x01, 0x35, 0x4a, 0x04, 0x22, 0x31, 0x30, 0x22, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x26, 0x92, 0x41, 0x23, 0x3a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x3a, 0x64, 0x65, 0x73, 0x63, 0x4a, 0x10, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x3a, 0x61, 0x73, 0x63, 0x22, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0x8a, 0x02, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x09, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22, 0x31, 0x30, 0x22, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05,
	0x4a, 0x03, 0x22, 0x32, 0x22, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08,
	0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x35, 0x22, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x26, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x4a, 0x06, 0x22, 0x74, 0x72, 0x75, 0x65, 0x22, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x3a, 0x0a,
	0x17, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x0f, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x92, 0x41, 0x05,
	0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x18, 0x46, 0x69, 0x6e,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x52,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schedule_messages_proto_rawDescOnce sync.Once
	file_schedule_messages_proto_rawDescData = file_schedule_messages_proto_rawDesc
)

func file_schedule_messages_proto_rawDescGZIP() []byte {
	file_schedule_messages_proto_rawDescOnce.Do(func() {
		file_schedule_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_schedule_messages_proto_rawDescData)
	})
	return file_schedule_messages_proto_rawDescData
}

var file_schedule_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_schedule_messages_proto_goTypes = []interface{}{
	(*Schedule)(nil),                   // 0: pb.Schedule
	(*ScheduleWithOffice)(nil),         // 1: pb.ScheduleWithOffice
	(*CreateScheduleRequest)(nil),      // 2: pb.CreateScheduleRequest
	(*CreateScheduleResponse)(nil),     // 3: pb.CreateScheduleResponse
	(*UpdateScheduleByIdRequest)(nil),  // 4: pb.UpdateScheduleByIdRequest
	(*UpdateScheduleByIdResponse)(nil), // 5: pb.UpdateScheduleByIdResponse
	(*DeleteScheduleByIdRequest)(nil),  // 6: pb.DeleteScheduleByIdRequest
	(*DeleteScheduleByIdResponse)(nil), // 7: pb.DeleteScheduleByIdResponse
	(*FindSchedulesRequest)(nil),       // 8: pb.FindSchedulesRequest
	(*FindSchedulesResponse)(nil),      // 9: pb.FindSchedulesResponse
	(*FindScheduleByIdRequest)(nil),    // 10: pb.FindScheduleByIdRequest
	(*FindScheduleByIdResponse)(nil),   // 11: pb.FindScheduleByIdResponse
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
}
var file_schedule_messages_proto_depIdxs = []int32{
	12, // 0: pb.Schedule.date:type_name -> google.protobuf.Timestamp
	12, // 1: pb.Schedule.created_at:type_name -> google.protobuf.Timestamp
	12, // 2: pb.Schedule.updated_at:type_name -> google.protobuf.Timestamp
	12, // 3: pb.ScheduleWithOffice.date:type_name -> google.protobuf.Timestamp
	12, // 4: pb.ScheduleWithOffice.created_at:type_name -> google.protobuf.Timestamp
	12, // 5: pb.ScheduleWithOffice.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 6: pb.UpdateScheduleByIdResponse.schedule:type_name -> pb.Schedule
	1,  // 7: pb.FindSchedulesResponse.schedules:type_name -> pb.ScheduleWithOffice
	1,  // 8: pb.FindScheduleByIdResponse.schedule:type_name -> pb.ScheduleWithOffice
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_schedule_messages_proto_init() }
func file_schedule_messages_proto_init() {
	if File_schedule_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schedule_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleWithOffice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScheduleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScheduleByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScheduleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteScheduleByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSchedulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSchedulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindScheduleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindScheduleByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schedule_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schedule_messages_proto_goTypes,
		DependencyIndexes: file_schedule_messages_proto_depIdxs,
		MessageInfos:      file_schedule_messages_proto_msgTypes,
	}.Build()
	File_schedule_messages_proto = out.File
	file_schedule_messages_proto_rawDesc = nil
	file_schedule_messages_proto_goTypes = nil
	file_schedule_messages_proto_depIdxs = nil
}
