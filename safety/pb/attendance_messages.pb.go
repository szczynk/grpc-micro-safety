// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: attendance_messages.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Attendance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ScheduleId       uint32                 `protobuf:"varint,3,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	ImageUrl         string                 `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Description      string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	AdminUsername    string                 `protobuf:"bytes,6,opt,name=admin_username,json=adminUsername,proto3" json:"admin_username,omitempty"`
	Status           string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	StatusAt         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=status_at,json=statusAt,proto3" json:"status_at,omitempty"`
	StatusInfo       string                 `protobuf:"bytes,9,opt,name=status_info,json=statusInfo,proto3" json:"status_info,omitempty"`
	CheckTemperature float64                `protobuf:"fixed64,10,opt,name=check_temperature,json=checkTemperature,proto3" json:"check_temperature,omitempty"`
	CheckStatus      string                 `protobuf:"bytes,11,opt,name=check_status,json=checkStatus,proto3" json:"check_status,omitempty"`
	CheckIn          *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=check_in,json=checkIn,proto3" json:"check_in,omitempty"`
	CheckOut         *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=check_out,json=checkOut,proto3" json:"check_out,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Attendance) Reset() {
	*x = Attendance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attendance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attendance) ProtoMessage() {}

func (x *Attendance) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attendance.ProtoReflect.Descriptor instead.
func (*Attendance) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Attendance) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attendance) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Attendance) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *Attendance) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Attendance) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Attendance) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *Attendance) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Attendance) GetStatusAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusAt
	}
	return nil
}

func (x *Attendance) GetStatusInfo() string {
	if x != nil {
		return x.StatusInfo
	}
	return ""
}

func (x *Attendance) GetCheckTemperature() float64 {
	if x != nil {
		return x.CheckTemperature
	}
	return 0
}

func (x *Attendance) GetCheckStatus() string {
	if x != nil {
		return x.CheckStatus
	}
	return ""
}

func (x *Attendance) GetCheckIn() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckIn
	}
	return nil
}

func (x *Attendance) GetCheckOut() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckOut
	}
	return nil
}

func (x *Attendance) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Attendance) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AttendanceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserUsername     string                 `protobuf:"bytes,3,opt,name=user_username,json=userUsername,proto3" json:"user_username,omitempty"`
	UserAvatar       string                 `protobuf:"bytes,4,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`
	ScheduleId       uint32                 `protobuf:"varint,5,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	ScheduleDate     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	OfficeId         string                 `protobuf:"bytes,7,opt,name=office_id,json=officeId,proto3" json:"office_id,omitempty"`
	OfficeName       string                 `protobuf:"bytes,8,opt,name=office_name,json=officeName,proto3" json:"office_name,omitempty"`
	ImageUrl         string                 `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Description      string                 `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	AdminUsername    string                 `protobuf:"bytes,11,opt,name=admin_username,json=adminUsername,proto3" json:"admin_username,omitempty"`
	Status           string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	StatusAt         *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=status_at,json=statusAt,proto3" json:"status_at,omitempty"`
	StatusInfo       string                 `protobuf:"bytes,14,opt,name=status_info,json=statusInfo,proto3" json:"status_info,omitempty"`
	CheckTemperature float64                `protobuf:"fixed64,15,opt,name=check_temperature,json=checkTemperature,proto3" json:"check_temperature,omitempty"`
	CheckStatus      string                 `protobuf:"bytes,16,opt,name=check_status,json=checkStatus,proto3" json:"check_status,omitempty"`
	CheckIn          *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=check_in,json=checkIn,proto3" json:"check_in,omitempty"`
	CheckOut         *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=check_out,json=checkOut,proto3" json:"check_out,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AttendanceDetail) Reset() {
	*x = AttendanceDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceDetail) ProtoMessage() {}

func (x *AttendanceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceDetail.ProtoReflect.Descriptor instead.
func (*AttendanceDetail) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{1}
}

func (x *AttendanceDetail) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AttendanceDetail) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendanceDetail) GetUserUsername() string {
	if x != nil {
		return x.UserUsername
	}
	return ""
}

func (x *AttendanceDetail) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *AttendanceDetail) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *AttendanceDetail) GetScheduleDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduleDate
	}
	return nil
}

func (x *AttendanceDetail) GetOfficeId() string {
	if x != nil {
		return x.OfficeId
	}
	return ""
}

func (x *AttendanceDetail) GetOfficeName() string {
	if x != nil {
		return x.OfficeName
	}
	return ""
}

func (x *AttendanceDetail) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AttendanceDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AttendanceDetail) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *AttendanceDetail) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AttendanceDetail) GetStatusAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusAt
	}
	return nil
}

func (x *AttendanceDetail) GetStatusInfo() string {
	if x != nil {
		return x.StatusInfo
	}
	return ""
}

func (x *AttendanceDetail) GetCheckTemperature() float64 {
	if x != nil {
		return x.CheckTemperature
	}
	return 0
}

func (x *AttendanceDetail) GetCheckStatus() string {
	if x != nil {
		return x.CheckStatus
	}
	return ""
}

func (x *AttendanceDetail) GetCheckIn() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckIn
	}
	return nil
}

func (x *AttendanceDetail) GetCheckOut() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckOut
	}
	return nil
}

func (x *AttendanceDetail) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AttendanceDetail) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Create Attendance
type CreateAttendanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ScheduleId  uint32 `protobuf:"varint,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl    string `protobuf:"bytes,4,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
}

func (x *CreateAttendanceRequest) Reset() {
	*x = CreateAttendanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAttendanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAttendanceRequest) ProtoMessage() {}

func (x *CreateAttendanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAttendanceRequest.ProtoReflect.Descriptor instead.
func (*CreateAttendanceRequest) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAttendanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateAttendanceRequest) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *CreateAttendanceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAttendanceRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type CreateAttendanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attendance *Attendance `protobuf:"bytes,1,opt,name=attendance,proto3" json:"attendance,omitempty"`
}

func (x *CreateAttendanceResponse) Reset() {
	*x = CreateAttendanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAttendanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAttendanceResponse) ProtoMessage() {}

func (x *CreateAttendanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAttendanceResponse.ProtoReflect.Descriptor instead.
func (*CreateAttendanceResponse) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAttendanceResponse) GetAttendance() *Attendance {
	if x != nil {
		return x.Attendance
	}
	return nil
}

// Update Attendance By ID
type UpdateAttendanceByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdminUsername string `protobuf:"bytes,3,opt,name=admin_username,json=adminUsername,proto3" json:"admin_username,omitempty"`
	Status        string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	StatusInfo    string `protobuf:"bytes,5,opt,name=status_info,json=statusInfo,proto3" json:"status_info,omitempty"`
}

func (x *UpdateAttendanceByIdRequest) Reset() {
	*x = UpdateAttendanceByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttendanceByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttendanceByIdRequest) ProtoMessage() {}

func (x *UpdateAttendanceByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttendanceByIdRequest.ProtoReflect.Descriptor instead.
func (*UpdateAttendanceByIdRequest) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAttendanceByIdRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAttendanceByIdRequest) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *UpdateAttendanceByIdRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateAttendanceByIdRequest) GetStatusInfo() string {
	if x != nil {
		return x.StatusInfo
	}
	return ""
}

type UpdateAttendanceByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attendance *Attendance `protobuf:"bytes,1,opt,name=attendance,proto3" json:"attendance,omitempty"`
}

func (x *UpdateAttendanceByIdResponse) Reset() {
	*x = UpdateAttendanceByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttendanceByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttendanceByIdResponse) ProtoMessage() {}

func (x *UpdateAttendanceByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttendanceByIdResponse.ProtoReflect.Descriptor instead.
func (*UpdateAttendanceByIdResponse) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAttendanceByIdResponse) GetAttendance() *Attendance {
	if x != nil {
		return x.Attendance
	}
	return nil
}

// Delete Attendance By ID
type DeleteAttendanceByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAttendanceByIdRequest) Reset() {
	*x = DeleteAttendanceByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAttendanceByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAttendanceByIdRequest) ProtoMessage() {}

func (x *DeleteAttendanceByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAttendanceByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteAttendanceByIdRequest) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteAttendanceByIdRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAttendanceByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteAttendanceByIdResponse) Reset() {
	*x = DeleteAttendanceByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAttendanceByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAttendanceByIdResponse) ProtoMessage() {}

func (x *DeleteAttendanceByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAttendanceByIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteAttendanceByIdResponse) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAttendanceByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Find Attendances
type FindAttendancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ScheduleId    uint32 `protobuf:"varint,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	AdminUsername string `protobuf:"bytes,3,opt,name=admin_username,json=adminUsername,proto3" json:"admin_username,omitempty"`
	Status        string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Page          uint32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit         uint32 `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Sort          string `protobuf:"bytes,7,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *FindAttendancesRequest) Reset() {
	*x = FindAttendancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAttendancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAttendancesRequest) ProtoMessage() {}

func (x *FindAttendancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAttendancesRequest.ProtoReflect.Descriptor instead.
func (*FindAttendancesRequest) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{8}
}

func (x *FindAttendancesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindAttendancesRequest) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *FindAttendancesRequest) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *FindAttendancesRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FindAttendancesRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAttendancesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindAttendancesRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type FindAttendancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount  uint32              `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalPages  uint32              `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	Page        uint32              `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit       uint32              `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	HasMore     bool                `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Attendances []*AttendanceDetail `protobuf:"bytes,6,rep,name=attendances,proto3" json:"attendances,omitempty"`
}

func (x *FindAttendancesResponse) Reset() {
	*x = FindAttendancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAttendancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAttendancesResponse) ProtoMessage() {}

func (x *FindAttendancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAttendancesResponse.ProtoReflect.Descriptor instead.
func (*FindAttendancesResponse) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{9}
}

func (x *FindAttendancesResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *FindAttendancesResponse) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *FindAttendancesResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAttendancesResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindAttendancesResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *FindAttendancesResponse) GetAttendances() []*AttendanceDetail {
	if x != nil {
		return x.Attendances
	}
	return nil
}

// Find Attendance By ID
type FindAttendanceByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindAttendanceByIdRequest) Reset() {
	*x = FindAttendanceByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAttendanceByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAttendanceByIdRequest) ProtoMessage() {}

func (x *FindAttendanceByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAttendanceByIdRequest.ProtoReflect.Descriptor instead.
func (*FindAttendanceByIdRequest) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{10}
}

func (x *FindAttendanceByIdRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindAttendanceByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attendance *AttendanceDetail `protobuf:"bytes,1,opt,name=attendance,proto3" json:"attendance,omitempty"`
}

func (x *FindAttendanceByIdResponse) Reset() {
	*x = FindAttendanceByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attendance_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAttendanceByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAttendanceByIdResponse) ProtoMessage() {}

func (x *FindAttendanceByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attendance_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAttendanceByIdResponse.ProtoReflect.Descriptor instead.
func (*FindAttendanceByIdResponse) Descriptor() ([]byte, []int) {
	return file_attendance_messages_proto_rawDescGZIP(), []int{11}
}

func (x *FindAttendanceByIdResponse) GetAttendance() *AttendanceDetail {
	if x != nil {
		return x.Attendance
	}
	return nil
}

var File_attendance_messages_proto protoreflect.FileDescriptor

var file_attendance_messages_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x06, 0x0a, 0x0a, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x32, 0x92, 0x41, 0x2f, 0x4a, 0x26, 0x22, 0x32, 0x34, 0x33, 0x38, 0x61,
	0x63, 0x33, 0x63, 0x2d, 0x33, 0x37, 0x65, 0x62, 0x2d, 0x34, 0x39, 0x30, 0x32, 0x2d, 0x61, 0x64,
	0x65, 0x66, 0x2d, 0x65, 0x64, 0x31, 0x36, 0x62, 0x34, 0x34, 0x33, 0x31, 0x30, 0x33, 0x30, 0x22,
	0xa2, 0x02, 0x04, 0x75, 0x75, 0x69, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92,
	0x41, 0x3b, 0x4a, 0x39, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x73, 0x2e, 0x64, 0x69, 0x63, 0x65, 0x62, 0x65, 0x61, 0x72, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x70, 0x65, 0x65, 0x70, 0x73,
	0x2f, 0x6a, 0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65, 0x2e, 0x73, 0x76, 0x67, 0x22, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x52, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0x92, 0x41,
	0x2d, 0x4a, 0x2b, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x20, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x22, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0x92, 0x41, 0x09, 0x4a, 0x07, 0x22, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x22, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0x92, 0x41, 0x0b, 0x4a, 0x09, 0x22, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41,
	0x74, 0x12, 0x2b, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x92, 0x41, 0x07, 0x4a, 0x05, 0x22, 0x53, 0x69,
	0x70, 0x22, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38,
	0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x4a, 0x06,
	0x22, 0x33, 0x37, 0x2e, 0x35, 0x22, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e,
	0x92, 0x41, 0x0b, 0x4a, 0x09, 0x22, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x52, 0x0b,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x97, 0x09, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x4b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x32, 0x92, 0x41, 0x2f, 0x4a, 0x26, 0x22, 0x32, 0x34, 0x33, 0x38, 0x61, 0x63, 0x33,
	0x63, 0x2d, 0x33, 0x37, 0x65, 0x62, 0x2d, 0x34, 0x39, 0x30, 0x32, 0x2d, 0x61, 0x64, 0x65, 0x66,
	0x2d, 0x65, 0x64, 0x31, 0x36, 0x62, 0x34, 0x34, 0x33, 0x31, 0x30, 0x33, 0x30, 0x22, 0xa2, 0x02,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x4a, 0x09, 0x22, 0x6a, 0x6f, 0x68, 0x6e,
	0x64, 0x65, 0x65, 0x22, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x4a, 0x39, 0x22, 0x68,
	0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x2e, 0x64,
	0x69, 0x63, 0x65, 0x62, 0x65, 0x61, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x70, 0x65, 0x65, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x68, 0x6e, 0x64,
	0x65, 0x65, 0x2e, 0x73, 0x76, 0x67, 0x22, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22,
	0x31, 0x22, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3f,
	0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x08, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08,
	0x4a, 0x06, 0x22, 0x4d, 0x61, 0x69, 0x6e, 0x22, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x4a, 0x39, 0x22, 0x68,
	0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x2e, 0x64,
	0x69, 0x63, 0x65, 0x62, 0x65, 0x61, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x70, 0x65, 0x65, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x68, 0x6e, 0x64,
	0x65, 0x65, 0x2e, 0x73, 0x76, 0x67, 0x22, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x52, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0x92, 0x41, 0x2d, 0x4a, 0x2b, 0x22, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20,
	0x77, 0x6f, 0x72, 0x6b, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x20, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0x92,
	0x41, 0x09, 0x4a, 0x07, 0x22, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x52, 0x0d, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x4a,
	0x09, 0x22, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0x92, 0x41, 0x07, 0x4a, 0x05, 0x22, 0x53, 0x69, 0x70, 0x22, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x01, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x4a, 0x06, 0x22, 0x33, 0x37, 0x2e, 0x35, 0x22,
	0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x4a, 0x09, 0x22,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69,
	0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x12, 0x37, 0x0a, 0x09,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd7, 0x02, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x92, 0x41, 0x2f, 0x4a, 0x26, 0x22, 0x32, 0x34, 0x33, 0x38, 0x61, 0x63, 0x33, 0x63,
	0x2d, 0x33, 0x37, 0x65, 0x62, 0x2d, 0x34, 0x39, 0x30, 0x32, 0x2d, 0x61, 0x64, 0x65, 0x66, 0x2d,
	0x65, 0x64, 0x31, 0x36, 0x62, 0x34, 0x34, 0x33, 0x31, 0x30, 0x33, 0x30, 0x22, 0xa2, 0x02, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x0f, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22,
	0x31, 0x22, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x52,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x30, 0x92, 0x41, 0x2d, 0x4a, 0x2b, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72,
	0x6b, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x20, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x74, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x45, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x08, 0x92, 0x41, 0x3b,
	0x4a, 0x39, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x73, 0x2e, 0x64, 0x69, 0x63, 0x65, 0x62, 0x65, 0x61, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x70, 0x65, 0x65, 0x70, 0x73, 0x2f, 0x6a,
	0x6f, 0x68, 0x6e, 0x64, 0x65, 0x65, 0x2e, 0x73, 0x76, 0x67, 0x22, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x4a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0xf2, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0f, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x03, 0x92, 0x41, 0x09, 0x4a, 0x07, 0x22, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x52,
	0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31,
	0xfa, 0x42, 0x1f, 0x72, 0x1d, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x52,
	0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x92, 0x41, 0x0c, 0x4a, 0x0a, 0x22, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x22, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0x92, 0x41, 0x07, 0x4a, 0x05, 0x22, 0x53, 0x69, 0x70, 0x22, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x0f, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22,
	0x31, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0x92, 0x41, 0x23, 0x4a, 0x21, 0x22, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x22, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xec, 0x02, 0x0a, 0x16, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0x92, 0x41, 0x2f, 0x4a, 0x26, 0x22, 0x32, 0x34, 0x33, 0x38,
	0x61, 0x63, 0x33, 0x63, 0x2d, 0x33, 0x37, 0x65, 0x62, 0x2d, 0x34, 0x39, 0x30, 0x32, 0x2d, 0x61,
	0x64, 0x65, 0x66, 0x2d, 0x65, 0x64, 0x31, 0x36, 0x62, 0x34, 0x34, 0x33, 0x31, 0x30, 0x33, 0x30,
	0x22, 0xa2, 0x02, 0x04, 0x75, 0x75, 0x69, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31, 0x22, 0x52,
	0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0x92, 0x41, 0x09, 0x4a, 0x07, 0x22, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x22, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0x92, 0x41, 0x0c, 0x4a, 0x0a, 0x22, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x22, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x31,
	0x22, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0c, 0x92, 0x41, 0x09, 0x3a, 0x01, 0x35, 0x4a, 0x04,
	0x22, 0x31, 0x30, 0x22, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0x92, 0x41, 0x23, 0x3a, 0x0f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x3a, 0x64, 0x65, 0x73, 0x63, 0x4a,
	0x10, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x3a, 0x61, 0x73, 0x63,
	0x22, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x8e, 0x02, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0x92, 0x41, 0x06, 0x4a, 0x04, 0x22,
	0x31, 0x30, 0x22, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x29, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x32, 0x22, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22,
	0x31, 0x22, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22, 0x35,
	0x22, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f,
	0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x4a,
	0x06, 0x22, 0x74, 0x72, 0x75, 0x65, 0x22, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x36, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x0f, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x92, 0x41, 0x05, 0x4a, 0x03, 0x22,
	0x31, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f,
	0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_attendance_messages_proto_rawDescOnce sync.Once
	file_attendance_messages_proto_rawDescData = file_attendance_messages_proto_rawDesc
)

func file_attendance_messages_proto_rawDescGZIP() []byte {
	file_attendance_messages_proto_rawDescOnce.Do(func() {
		file_attendance_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_attendance_messages_proto_rawDescData)
	})
	return file_attendance_messages_proto_rawDescData
}

var file_attendance_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_attendance_messages_proto_goTypes = []interface{}{
	(*Attendance)(nil),                   // 0: pb.Attendance
	(*AttendanceDetail)(nil),             // 1: pb.AttendanceDetail
	(*CreateAttendanceRequest)(nil),      // 2: pb.CreateAttendanceRequest
	(*CreateAttendanceResponse)(nil),     // 3: pb.CreateAttendanceResponse
	(*UpdateAttendanceByIdRequest)(nil),  // 4: pb.UpdateAttendanceByIdRequest
	(*UpdateAttendanceByIdResponse)(nil), // 5: pb.UpdateAttendanceByIdResponse
	(*DeleteAttendanceByIdRequest)(nil),  // 6: pb.DeleteAttendanceByIdRequest
	(*DeleteAttendanceByIdResponse)(nil), // 7: pb.DeleteAttendanceByIdResponse
	(*FindAttendancesRequest)(nil),       // 8: pb.FindAttendancesRequest
	(*FindAttendancesResponse)(nil),      // 9: pb.FindAttendancesResponse
	(*FindAttendanceByIdRequest)(nil),    // 10: pb.FindAttendanceByIdRequest
	(*FindAttendanceByIdResponse)(nil),   // 11: pb.FindAttendanceByIdResponse
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
}
var file_attendance_messages_proto_depIdxs = []int32{
	12, // 0: pb.Attendance.status_at:type_name -> google.protobuf.Timestamp
	12, // 1: pb.Attendance.check_in:type_name -> google.protobuf.Timestamp
	12, // 2: pb.Attendance.check_out:type_name -> google.protobuf.Timestamp
	12, // 3: pb.Attendance.created_at:type_name -> google.protobuf.Timestamp
	12, // 4: pb.Attendance.updated_at:type_name -> google.protobuf.Timestamp
	12, // 5: pb.AttendanceDetail.schedule_date:type_name -> google.protobuf.Timestamp
	12, // 6: pb.AttendanceDetail.status_at:type_name -> google.protobuf.Timestamp
	12, // 7: pb.AttendanceDetail.check_in:type_name -> google.protobuf.Timestamp
	12, // 8: pb.AttendanceDetail.check_out:type_name -> google.protobuf.Timestamp
	12, // 9: pb.AttendanceDetail.created_at:type_name -> google.protobuf.Timestamp
	12, // 10: pb.AttendanceDetail.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 11: pb.CreateAttendanceResponse.attendance:type_name -> pb.Attendance
	0,  // 12: pb.UpdateAttendanceByIdResponse.attendance:type_name -> pb.Attendance
	1,  // 13: pb.FindAttendancesResponse.attendances:type_name -> pb.AttendanceDetail
	1,  // 14: pb.FindAttendanceByIdResponse.attendance:type_name -> pb.AttendanceDetail
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_attendance_messages_proto_init() }
func file_attendance_messages_proto_init() {
	if File_attendance_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_attendance_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attendance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAttendanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAttendanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttendanceByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttendanceByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAttendanceByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAttendanceByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAttendancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAttendancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAttendanceByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attendance_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAttendanceByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_attendance_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_attendance_messages_proto_goTypes,
		DependencyIndexes: file_attendance_messages_proto_depIdxs,
		MessageInfos:      file_attendance_messages_proto_msgTypes,
	}.Build()
	File_attendance_messages_proto = out.File
	file_attendance_messages_proto_rawDesc = nil
	file_attendance_messages_proto_goTypes = nil
	file_attendance_messages_proto_depIdxs = nil
}
